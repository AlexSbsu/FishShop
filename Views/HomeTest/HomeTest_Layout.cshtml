<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />    
    <title>@ViewData["Title"] - Rybka</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-5.3.2-dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />    

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <!--<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>-->    
    <script src="~/lib/bootstrap-5.3.2-dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <style>        
    </style>
    
    <script>

        let prodsTobuy = [];
        let prodsTobuyString = "";
        let prodsTobuyRequestString = "";       
        //-----------------------------------------------------------------------CLICK EVENT-----------------------------------------------//
        document.addEventListener('click', handleClick);

        function handleClick(event) {            
                console.log('user clicked: ', event.target);
                var btn = event.target;
                //---MAIN select
                if (btn.innerHTML.trim() == 'В корзину' && btn.classList.contains("basketAddRemove")) {
                    btn.innerHTML = 'В корзине';
                    btn.classList.add('btn-danger');
                    btn.classList.remove('btn-success');                    

                    prodsTobuy.push(btn.id);                                //update Prods array
                    prodsTobuyString = prodsTobuy.toString();             //update Prods string
                    prodsTobuyRequestStringBuild()
                    basketUpdate();
                    prodsTobuyPrint();                    
                }
                else {
                    if (btn.classList.contains("basketAddRemove")) {
                        btn.innerHTML = 'В корзину';
                        btn.classList.add('btn-success');
                        btn.classList.remove('btn-danger');                                   

                        prodsTobuy.splice(prodsTobuy.indexOf(btn.id), 1);   //update Prods array
                        prodsTobuyString = prodsTobuy.toString();            //update Prods string
                        prodsTobuyRequestStringBuild()
                        basketUpdate();
                        prodsTobuyPrint();                        
                    }
                }
                //---BASKET change amount
                if (btn.classList.contains("btn-minus")) {
                    let grp_id = btn.id.slice(0, -6);
                    let grp_input_id = grp_id + "_amount";
                    if (grp_input_id.value > 0) grp_input_id.value -= 1;                    
                }
                if (btn.classList.contains("btn-plus")) {
                    let grp_id = btn.id.slice(0, -6);
                    let grp_input_id = grp_id + "_amount";
                    if (grp_input_id.value < 999) grp_input_id.value += 1;
                }

            if (btn.id == 'refresh') testrefresh();
        }

        function prodsTobuyPrint() {
            console.log('--->>>prodsTobuyPrint : ');
            if (prodsTobuy.length == 0) console.log('...prodsTobuy Empty...')
            else prodsTobuy.forEach((number) => console.log(number));
            console.log('prodsTobuyString = ' + prodsTobuy.toString());
            console.log('prodsTobuyRequestString = ' + prodsTobuyRequestString.toString());
        };

        function prodsTobuyRequestStringBuild() {
            prodsTobuyRequestString = "";
            for (let i = 0; i < prodsTobuy.length; i++) {
                prodsTobuyRequestString += "basketprodlist[" + i + "]=" + prodsTobuy[i] + "&";
            }
            prodsTobuyRequestString = prodsTobuyRequestString.slice(0, prodsTobuyRequestString.length - 1);
        }

        function basketUpdate() {
            basket_counter.innerHTML = prodsTobuy.length;
            if (prodsTobuy.length == 0) {
                basket.classList.add('basketEmpty');
                basket.setAttribute("href", "/Basket/Index?" + prodsTobuyRequestString);
                prodsTobuySaveToCookie();
            }
            else {
                basket.classList.remove('basketEmpty');
                basket.setAttribute("href", "/Basket/Index?" + prodsTobuyRequestString);
                prodsTobuySaveToCookie();
            }
        }
        
        function prodsTobuySaveToCookie() {
            var prodsTobuycookieVal = JSON.stringify(prodsTobuy);
            document.cookie = "prodsTobuycookie=" + prodsTobuycookieVal;
            //.getCookie('prodsTobuycookie')
            console.log('Cookies prodsTobuycookie saved : ' + document.cookie);
        }

        function testrefresh() { 
            console.log("!!!In testrefresh()");
            let str = 'Рыба';
            fetch('/HomeTest',
                {
                    method: 'POST',
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(str)
                })
                       .then(response => response.text())
            .then(html => document.getElementById('partialdiv1').innerHTML = html);

           /*
           {{ method: 'GET', Conten- type: 'text/html', headers: { "Content-Type": "text/html" } }

              document.getElementById('partialdiv1').innerHTML = 'in string';
                          
            //$("#partialdiv1").load("/HomeTest");

            //fetch('/HomeTest',{'method': 'GET','Conten-type' : 'text/html',
            /*
            fetch('/HomeTest')
                .then(function (response) {
                    if (!response.ok) {
                        console.log('response.status = ' + response.statusText);
                    } 
                    return response.html;
                })
                .then(function (html) {
                     document.getElementById('partialdiv1').innerHTML = 'in string';                    
                });
            */
            
            /*
            fetch('/HomeTest')
                .then(function (response) {
                    if (!response.ok) {
                        div.innerHTML = `<h2>{response.status} - {response.statusTest}</h2>`;
                    }
                    return response.text();
                })
                .then(function (html) {
                    partialdiv1.innerHTML = html;
            });
            */
        }


        
        //-----------------------------------------------------------------------CLICK EVENT-----------------------------------------------//

        //-----------------------------------------------------------------------CHANGE EVENT-----------------------------------------------//

        document.addEventListener('change', handlchange);
        
        function handlchange(event) { 
            console.log('!!!changed');
            var el = event.target;
            
            if ( el.classList.contains('sort_list') || el.classList.contains('filter_item') ) 
            {
                console.log('!!!Inside change action');
                let filters = [];
                //---------------------------sort_list
                const sortel = document.querySelector("#sort");
                const id = sortel.options[sortel.selectedIndex].id;

                console.log('selected sort element id = ' + id);
                filters.push(id);

                //---------------------------filter_item
                let check_arr = [];

                check_arr[0] = document.querySelector('#category_filter_all').checked;
                check_arr[1] = document.querySelector('#category_filter_fish').checked;
                check_arr[2] = document.querySelector('#category_filter_plant').checked;
                check_arr[3] = document.querySelector('#category_filter_tool').checked;

                console.log('check_arr[0] = ' + check_arr[0]);
                console.log('check_arr[1] = ' + check_arr[1]);
                console.log('check_arr[2] = ' + check_arr[2]);
                console.log('check_arr[3] = ' + check_arr[3]);

                let notall_checked = false;
                for (let i = 0; i < check_arr.length; i++) {
                    if (check_arr[i]) notall_checked = true;
                }                
                console.log('notall_checked = ' + notall_checked);

                if (el.id == 'category_filter_all') {
                        if (check_arr[0] && notall_checked) {
                            document.querySelector('#category_filter_fish').checked = false;
                            document.querySelector('#category_filter_plant').checked = false;
                            document.querySelector('#category_filter_tool').checked = false;
                        }
                        if (!check_arr[0] && !notall_checked) {
                            document.querySelector('#category_filter_all').checked = true;
                        }
                }
                if (el.id != 'category_filter_all') {
                        if (check_arr[0] && notall_checked) {
                            document.querySelector('#category_filter_all').checked = false;                            
                        }
                        if (!check_arr[0] && !notall_checked) {
                            document.querySelector('#category_filter_all').checked = true;
                        }
                }

                let checked = document.querySelectorAll('.filter_item');
                checked.forEach(e => { if (e.checked) filters.push(e.id); });

                filters.forEach( e => { console.log('filters to send element : ' + e); });
                
                /*
                let filters_req = "";
                let i = 0;
                for (let i = 0; i < filters.length; i++) { filters_req += 'filters[' + i + ']=' + filters[i] + '&'; }
                filters_req = filters_req.slice(0, filters_req.length - 1);
                console.log('filters_req = ' + filters_req);
                */

                console.log("!!!In testrefresh()");
                
                fetch('/HomeTest/Partial1',
                    {
                        method: 'POST',
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(filters)
                    })
                    .then(response => response.text())
                    .then(html => document.getElementById('partialdiv1').innerHTML = html);

            }
        }

        //-----------------------------------------------------------------------CHANGE EVENT-----------------------------------------------//
        
    </script>
</head>

<body class="container-fluid" style="max-width:1500px">
    
    <!-----------------------HEADER-MY------------->    
    
    <!---------NAVIGATION START--------->
            @{
                await Html.RenderPartialAsync("Layout_NavbarPartial");
            }
    <!---------NAVIGATION END--------->
    
    <div class="row" style="margin-bottom:50px">

    <!---------FILTER SIDE START------>
            @{
                await Html.RenderPartialAsync("HomeTestFilterSide_View");
            }
    <!---------FILTER SIDE END------>

<!-----------------------MAIN START------------->
    @RenderBody()
    <main class="col-lg-10 col-md-10 col-sm-12">
    @{
        await Html.RenderPartialAsync("HomeTestSortPanel_View");
    }

    <div id="partialdiv1">
    @{
        await Html.RenderPartialAsync("HomeTestProducts_PartialView");
    }
    </div>

    </main>
        
<!-----------------------MAIN END------------->
    </div>
        <br />
<!-----------------------FOOTER------------->
    <footer class="border-top footer fixed-bottom text-muted bg-white box-shadow">
        <div class="container">
            &copy; 2024 - Fish_Shop <!-- - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a> -->
            @RenderSection("Footer",false)
        </div>
    </footer>
<!-----------------------FOOTER------------->
    
    
    </div>
</body>
</html>
